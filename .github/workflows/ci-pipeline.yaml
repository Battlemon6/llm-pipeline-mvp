# This file defines the github actions workflow, which we use as a ci pipeline.
name: Build, Push, and Deploy Seed-App

# Defines when the workflow will run.
on:
  # Triggers on push events to the main branch.
  push:
    branches: [ main ]
    # Only watches the changes in the seed-app folder. Does not watch the helm charts as there is no need for rebuilding for those.
    paths:
      - 'seed-app/**'
  # Also allows the workflow to be run manually from the Actions tab.
  workflow_dispatch:

# Environment variables used throughout the workflow.
env:
  PROJECT_ID: llm-pipeline-birkbeck 
  GAR_LOCATION: europe-west2 # This has to be the projects region.
  IMAGE_NAME: seed-app
  REPOSITORY: llm-app-images
  CHART_PATH: llm-chart/values.yaml

# Permissions required for the workflow to run.
permissions:
  contents: write # Needed to commit changes back to the repository.
  id-token: write # Needed for secure authentication with Google Cloud.

# The list of jobs to be executed.
jobs:
  build-and-push:
    # Specifies that the job will run on a GitHub-hosted Ubuntu machine.
    runs-on: ubuntu-latest
    
    # The sequence of tasks that make up the job.
    steps:
      # 1. Checks out the repository's code so the workflow can use it.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # A personal access token is used here to allow pushing the commit at the end.
          token: ${{ secrets.PAT }}

      # 2. Handles authentication with Google Cloud.
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          # Uses Workload Identity Federation for a secure, keyless login.
          workload_identity_provider: projects/745580653715/locations/global/workloadIdentityPools/github-pool/providers/github-provider
          service_account: github-actions-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          token_format: access_token
          access_token_lifetime: 300s
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform

      # 3. Logs into Google Artifact Registry to allow pushing the Docker image.
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      # 4. Sets up Docker Buildx, a tool for building images.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # 5. Builds the Docker image from the 'seed-app' directory and pushes it to the registry.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./seed-app
          push: true
          # The image is tagged with the unique commit SHA for version tracking.
          tags: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 6. Updates the Helm chart's values.yaml to use the newly built image.
      - name: Update values.yaml with new image tag
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
          yq -i '.seedApp.image.tag = "${{ github.sha }}"' ${{ env.CHART_PATH }}

      # 7. Commits the modified values.yaml file back to the repository.
      - name: Commit and push changes
        run: |
          # Configure git for the commit.
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.CHART_PATH }}
          # Commit only if there are actual changes.
          git diff --staged --quiet || git commit -m "ci: update image tag for seed-app to ${{ github.sha }} [ci skip]"
          # Push the changes. The '[ci skip]' message prevents this commit from re-triggering the workflow.
          git push